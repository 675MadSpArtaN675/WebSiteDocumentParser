@using DatabaseWork.DataClasses;
@using DatabaseWork.DataClasses.Tasks;
@model DisplayModel;
@functions {
    public IEnumerable<SelectedItems> GetTasksAnswerVariants(Task_d task)
    {
        return Model.SelectedItems.Where(si => si.TaskLink.Equals(task));
    }

    public IEnumerable<SelectedItems> GetTasksValidAnswerVariants(Task_d task)
    {
        return GetTasksAnswerVariants(task).Where(si => si.SelectTrue);
    }

    public string GetAnswerVariants(Task_d task, Func<Task_d, IEnumerable<SelectedItems>> chooser)
    {
        IEnumerable<SelectedItems> answerVariants = chooser(task);
        int variants_count = answerVariants.Count();

        if (variants_count > 0)
            return string.Join('\n', answerVariants);
        
        else
            return task.TaskCorrectAnswer;
    }
}

<div>
	<form asp-action="Index" asp-controller="DataWorker">
		<input type="submit" value="Назад" />
	</form>
</div>

<table>
    <tr>
        <th>Профиль</th>
        <th>Компетенция</th>
        <th>Дисциплина</th>
        <th>Текст задания</th>
        <th>Правильный ответ</th>
        <th>Варианты ответов</th>
    </tr>
    @foreach (var task in Model.TaskCompetenceDisciplineData)
    {
        <tr>
            <td>
                @task.FullDCLink.CompetenceLink.ProfileLink.ProTitle
            </td>
            <td>
                @task.FullDCLink.CompetenceLink.CompNumber
            </td>
            <td>
                @task.FullDCLink.DisciplineLink.DisTitle
            </td>
            <td>
                @task.TaskLink.TaskAnnotation
            </td>
            <td>
                @GetAnswerVariants(task.TaskLink, GetTasksValidAnswerVariants)
            </td>
            <td>
                @GetAnswerVariants(task.TaskLink, GetTasksAnswerVariants)
            </td>
        </tr>
    }

</table>