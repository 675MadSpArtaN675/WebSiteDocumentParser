@model List<PracticTask>
@{
    string name = (string)(ViewData["BaseNamesModule"] ?? "");
    HtmlNamesFormatter questionsNames = new HtmlNamesFormatter(name, "PracticTasks", "answerVariants");
}
<h2>Практические задания</h2>
<table>
    <tr>
        <th>Номер</th>
        <th>Описание</th>
        <th>Компетенция</th>
        <th>Номер правильного варианта ответа</th>
        <th>Номер варианта ответа</th>
        <th>Варианты ответов</th>

    </tr>
    @for (int i = 0; i < Model.Count; i++)
    {
        var item = Model[i];

        string answers_count = (item.answerVariants.Count + 1).ToString();
        int? valid_variant = item.answerVariants.Find(n => n.ValidAnswer)?.AnswerNormalNumber;

        <tr>

            <td rowspan=@answers_count>
                @Html.TextArea(questionsNames.GetCompetentionComponent(["Number"], i), Model[i].Number.ToString(), new { @value = @item.Number.ToString(), @readonly = true})
            </td>

            <td rowspan=@answers_count>
                @Html.TextArea(questionsNames.GetCompetentionComponent(["Description"], i), Model[i].Description, new { @value = @item.Description })
            </td>

            <td rowspan=@answers_count>
                @Html.TextArea(questionsNames.GetCompetentionComponent(["Competention", "Name"], i), Model[i].Competention.Name, new { @value = item.Competention.Name })
            </td>

            <td rowspan=@answers_count>
                @valid_variant
            </td>

            @for (int j = 0; j < item.answerVariants.Count; j++)
            {
                var answer = item.answerVariants[j];

                <tr>
                <td>
                        @Html.TextArea(questionsNames.GetEvalComponent(["AnswerNormalNumber"], i, j), Model[i].answerVariants[j].AnswerNormalNumber.ToString(), new { @value = answer.AnswerNormalNumber, @readonly = true })
                </td>

                <td>
                        @Html.TextArea(questionsNames.GetEvalComponent(["Description"], i, j), Model[i].answerVariants[j].Description, new { @value = answer.Description })
                </td>

            </tr>

                if (answer.ValidAnswer)
                    valid_variant = answer.AnswerNormalNumber;
            }
        </tr>
    }
</table>